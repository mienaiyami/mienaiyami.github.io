{"version":3,"sources":["components/todoListItem.jsx","components/App.jsx","index.js"],"names":["ListItem","props","checkBoxId","listItemText","isChecked","type","id","className","checked","onChange","changeTaskType","htmlFor","onClick","e","target","parentElement","children","click","dltTask","name","disabled","placeholder","onKeyUp","handleNewData","onBlur","taskData","JSON","parse","localStorage","getItem","App","useState","tasks","setTasks","makeId","map","includes","i","Math","floor","random","document","querySelector","nodeName","filter","key","preventDefault","value","content","state","find","useEffect","setItem","stringify","showBy","querySelectorAll","forEach","classList","contains","remove","add","style","display","currentTheme","body","replace","data","length","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.64cfda9b.chunk.js","sourcesContent":["const ListItem = (props) => {\r\n    let checkBoxId = props.checkBoxId;\r\n    let listItemText = props.listItemText;\r\n    let isChecked = props.isChecked ? true : null;\r\n    return props.type === \"display\" ? (\r\n        <div key={checkBoxId} id=\"\" className=\"listItem\">\r\n            <input\r\n                type=\"checkbox\"\r\n                id={checkBoxId}\r\n                checked={isChecked ? true : null}\r\n                onChange={props.changeTaskType}\r\n            />\r\n            <label htmlFor={checkBoxId}></label>\r\n            <div\r\n                className=\"listItemText\"\r\n                onClick={(e) => e.target.parentElement.children[0].click()}\r\n            >\r\n                {listItemText}\r\n            </div>\r\n            <button\r\n                className=\"dltTask\"\r\n                onClick={() => props.dltTask(checkBoxId)}\r\n            ></button>\r\n        </div>\r\n    ) : (\r\n        <div key={checkBoxId} id=\"\" className=\"listItem\">\r\n            <input type=\"checkbox\" name=\"\" id={checkBoxId} disabled />\r\n            <label htmlFor={checkBoxId}></label>\r\n            <div className=\"listItemText\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={listItemText}\r\n                    onKeyUp={(e) => props.handleNewData(e, checkBoxId)}\r\n                    onBlur={(e) => props.handleNewData(e, checkBoxId)}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListItem;\r\n","import { useState, useEffect } from \"react\";\nimport ListItem from \"./todoListItem\";\n\nlet taskData = JSON.parse(localStorage.getItem(\"taskData\")) || [];\nconst App = (props) => {\n    const [tasks, setTasks] = useState(taskData);\n    const makeId = () => {\n        let abc = \"abcdefghijklmnopqrstuvwxyz\";\n        let id = \"\";\n        while (tasks.map((e) => e.id).includes(id) || id === \"\") {\n            for (let i = 0; i < 5; i++) {\n                id += abc[Math.floor(Math.random() * 26)];\n            }\n        }\n\n        return id;\n    };\n    const toggleTheme = () => {\n        let currentTheme = document.body.classList[0];\n        if (currentTheme === \"darkTheme\")\n            document.body.classList.replace(\"darkTheme\", \"lightTheme\");\n        if (currentTheme === \"lightTheme\")\n            document.body.classList.replace(\"lightTheme\", \"darkTheme\");\n    };\n    const dltTask = (id) => {\n        let parent = document.querySelector(\"#\" + id + \"\").parentElement\n            .parentElement;\n        if (parent.nodeName === \"LI\") {\n            setTasks(tasks.filter((e) => e.id !== id));\n        }\n    };\n    const handleNewData = (e, id) => {\n        if ((e?.type === \"keyup\" && e?.key === \"Enter\") || e?.type === \"blur\") {\n            e.preventDefault();\n            if (e.target.value === \"\") return;\n            setTasks([\n                ...tasks,\n                { id: makeId(), content: e.target.value, state: false },\n            ]);\n            e.target.value = \"\";\n        }\n    };\n    const changeTaskType = (e) => {\n        let id = e.target.id;\n        let state = e.target.checked;\n        tasks.find((e) => e.id === id).state = state;\n        setTasks([...tasks]);\n    };\n    useEffect(() => {\n        localStorage.setItem(\"taskData\", JSON.stringify(tasks));\n    });\n    const clearCompleted = () => {\n        setTasks([...tasks.filter((e) => !e.state)]);\n    };\n    const showBy = (type) => {\n        switch (type) {\n            case \"active\":\n                document\n                    .querySelectorAll(\n                        \"#root > div > div.TODOList > div > div > button\"\n                    )\n                    .forEach((e) => {\n                        if (e.classList.contains(\"activeBtn\"))\n                            e.classList.remove(\"activeBtn\");\n                    });\n                document\n                    .querySelector(\n                        \"#root > div > div.TODOList > div > div > button:nth-child(2)\"\n                    )\n                    .classList.add(\"activeBtn\");\n                document\n                    .querySelectorAll(\n                        \"#root > div > div.TODOList > ul li >div> input\"\n                    )\n                    .forEach((i) => {\n                        i.parentElement.parentElement.style.display = \"block\";\n\n                        if (i.checked) {\n                            i.parentElement.parentElement.style.display =\n                                \"none\";\n                        }\n                    });\n                break;\n            case \"completed\":\n                document\n                    .querySelectorAll(\n                        \"#root > div > div.TODOList > div > div > button\"\n                    )\n                    .forEach((e) => {\n                        if (e.classList.contains(\"activeBtn\"))\n                            e.classList.remove(\"activeBtn\");\n                    });\n                document\n                    .querySelector(\n                        \"#root > div > div.TODOList > div > div > button:nth-child(3)\"\n                    )\n                    .classList.add(\"activeBtn\");\n                document\n                    .querySelectorAll(\n                        \"#root > div > div.TODOList > ul li >div> input\"\n                    )\n                    .forEach((i) => {\n                        i.parentElement.parentElement.style.display = \"block\";\n\n                        if (!i.checked) {\n                            i.parentElement.parentElement.style.display =\n                                \"none\";\n                        }\n                    });\n                break;\n\n            case \"all\":\n                document\n                    .querySelectorAll(\n                        \"#root > div > div.TODOList > div > div > button\"\n                    )\n                    .forEach((e) => {\n                        if (e.classList.contains(\"activeBtn\"))\n                            e.classList.remove(\"activeBtn\");\n                    });\n                document\n                    .querySelector(\n                        \"#root > div > div.TODOList > div > div > button:nth-child(1)\"\n                    )\n                    .classList.add(\"activeBtn\");\n                document\n                    .querySelectorAll(\n                        \"#root > div > div.TODOList > ul li >div> input\"\n                    )\n                    .forEach((i) => {\n                        i.parentElement.parentElement.style.display = \"block\";\n                    });\n                break;\n\n            default:\n                document.querySelectorAll(\n                    \"#root > div > div.TODOList > ul li\"\n                ).style.display = \"block\";\n                break;\n        }\n    };\n    return (\n        <div className=\"app\">\n            <div className=\"topBar\">\n                <h1 className=\"appName\">TODO</h1>\n                <button className=\"themeBtn\" onClick={toggleTheme}></button>\n            </div>\n            <div className=\"newTODO\">\n                {(() => {\n                    let id = makeId();\n                    return (\n                        <ListItem\n                            handleNewData={handleNewData}\n                            checkBoxId={id}\n                            isChecked={false}\n                            listItemText=\"Type new task\"\n                            type={\"input\"}\n                        />\n                    );\n                })()}\n            </div>\n            <div className=\"TODOList\">\n                <ul>\n                    {tasks.map((data) => {\n                        return (\n                            <li key={data.id}>\n                                <ListItem\n                                    key={data.id}\n                                    dltTask={dltTask}\n                                    changeTaskType={changeTaskType}\n                                    checkBoxId={data.id}\n                                    isChecked={data.state}\n                                    listItemText={data.content}\n                                    type={\"display\"}\n                                />\n                            </li>\n                        );\n                    })}\n                </ul>\n                <div className=\"listInfo\">\n                    <span className=\"itemLength\">\n                        {tasks.length} items left\n                    </span>\n                    <div className=\"filterItems\">\n                        <button\n                            className=\"activeBtn\"\n                            onClick={() => showBy(\"all\")}\n                        >\n                            All\n                        </button>\n                        <button onClick={() => showBy(\"active\")}>Active</button>\n                        <button onClick={() => showBy(\"completed\")}>\n                            Completed\n                        </button>\n                    </div>\n                    <button className=\"clearComplete\" onClick={clearCompleted}>\n                        Clear Complete\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./components/App.jsx\";\n\nconsole.log(\"contact me at sukoonkumar2@gmail.com\");\nconsole.log(\"https://github.com/SukoonT\");\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}